version: '3.8'
services:
  # Config Server
  configsvr:
    image: mongo:7.0
    container_name: configsvr
    command: mongod --configsvr --replSet configrs --port 27017 --dbpath /data/db
    volumes:
      - configsvr_data:/data/db
    networks:
      - mongo_network

  # Shard 1
  shard1:
    image: mongo:7.0
    container_name: shard1
    command: mongod --shardsvr --replSet shard1rs --port 27017 --dbpath /data/db
    volumes:
      - shard1_data:/data/db
    networks:
      - mongo_network

  # Shard 2
  shard2:
    image: mongo:7.0
    container_name: shard2
    command: mongod --shardsvr --replSet shard2rs --port 27017 --dbpath /data/db
    volumes:
      - shard2_data:/data/db
    networks:
      - mongo_network

  # Shard 3
  shard3:
    image: mongo:7.0
    container_name: shard3
    command: mongod --shardsvr --replSet shard3rs --port 27017 --dbpath /data/db
    volumes:
      - shard3_data:/data/db
    networks:
      - mongo_network

  # Router
  mongos:
    image: mongo:7.0
    container_name: mongos
    command: mongos --configdb configrs/configsvr:27017 --port 27017
    ports:
      - "27020:27017"
    depends_on:
      - configsvr
      - shard1
      - shard2
      - shard3
    networks:
      - mongo_network

  # Service d'initialisation
  mongo-shard-setup:
    image: mongo:7.0
    container_name: mongo-shard-setup
    depends_on:
      - configsvr
      - shard1
      - shard2
      - shard3
      - mongos
    volumes:
      - ./setup-sharding.sh:/setup-sharding.sh
    entrypoint: ["bash", "/setup-sharding.sh"]
    networks:
      - mongo_network

networks:
  mongo_network:
    driver: bridge

volumes:
  configsvr_data:
  shard1_data:
  shard2_data:
  shard3_data: